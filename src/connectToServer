#!/opt/homebrew/bin/lua

HOME = os.getenv("HOME")
-- TMP_FILE = '/tmp/ssh_connection_info.txt'
TMP_FILE = "/tmp/ssh_connection_info.txt"

--
--

local function error(S)
    print("ERROR:", S)
end

local function read_one()
    os.execute("stty -icanon")
    Tmp = io.read(1)
    os.execute("stty icanon")
    print()
    return Tmp
end

--
--

F_ssh_pid = io.popen("pgrep -f \'L 8000:\'")
PID = F_ssh_pid:read('*n')
F_ssh_pid:close()

if PID then
    io.write("SSH is already running.\nRestart SSH connection? [Y/n] ")
    Ans = read_one()

    if Ans == 'n' then
        os.execute("open http://localhost:8000/gr99se/index.php")
        return
    end
    if Ans ~= "Y" then
        error("Invalid option.")
        return
    end
    os.execute("kill " .. PID)
end

-- echo "Usage: $0 [help|reset|close]"

F = io.open(TMP_FILE, 'r')

if not F then
    io.write("Path to key: ")
    Key = io.read('*line')
    Key = string.gsub(Key, '$HOME', HOME)

    io.write("Username: ")
    Uname = io.read('*line')

    F = io.open(TMP_FILE, 'w')
    if not F then
        error("Cannot save credentials.")
        return
    end
    F:write(Key, "\n", Uname, "\n")
else
    Key = F:read('*line')
    Uname = F:read('*line')
end
F:close()

if not Key or Key == '' then
    error("No key.")
    Flag = true
end
if not Uname or Uname == '' then
    error("No username.")
    Flag = true
end
if Flag then return end

os.execute("ssh -fo ExitOnForwardFailure=yes -i " .. Key .. " " .. Uname .. "@34.221.74.121 -N -L 8000:localhost:80")
os.execute("open http://localhost:8000/gr99se/index.php")
